// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para el género
enum Gender {
  male
  female
  other
}

// Enum para el rol del usuario
enum Role {
  admin
  user
}

model User {
  id            String    @id @default(uuid())
  name          String?
  lastName      String?
  email         String    @unique
  emailVerified DateTime?
  password      String // TODO: Cifrar contraseña
  dateOfBirth   DateTime?
  role          Role      @default(user)
  image         String?
  phone         String?
  gender        Gender?
  posts         Post[]
}

model Post {
  id          String   @id @default(uuid())
  name        String
  date        DateTime @default(now())
  description String
  gender      Gender
  age         String
  phone       String
  history     String
  photos      String?
  weight      String
  height      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  province   Province @relation(fields: [provinceId], references: [id])
  provinceId String

  species   Species @relation(fields: [speciesId], references: [id])
  speciesId String

  postToHowDelivered PostToHowDelivered[]
  postToEnumBehavior PostToEnumBehavior[]
}

model HowDelivered {
  id    String               @id @default(uuid())
  name  String
  posts PostToHowDelivered[]
}

model PostToHowDelivered {
  id             String        @id @default(uuid())
  postId         String
  howDelivered   HowDelivered? @relation(fields: [howDeliveredId], references: [id])
  howDeliveredId String?
  Post           Post          @relation(fields: [postId], references: [id])
}

model Behavior {
  id    String               @id @default(uuid())
  name  String
  posts PostToEnumBehavior[]
}

model PostToEnumBehavior {
  id             String    @id @default(uuid())
  postId         String
  enumBehavior   Behavior? @relation(fields: [enumBehaviorId], references: [id])
  enumBehaviorId String?
  Post           Post      @relation(fields: [postId], references: [id])
}

model Province {
  id    String @id
  name  String
  // Relación con los posts
  posts Post[]
}

model Species {
  id    String @id @default(uuid())
  name  String
  // Relación con los posts
  posts Post[]
}
